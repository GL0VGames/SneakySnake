{"version":3,"sources":["NPC.ts"],"names":[],"mappings":"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","file":"NPC.js","sourcesContent":["/// <reference path=\"ArgyleEngine.ts\"/>\r\n/// <reference path=\"Player.ts\"/>\r\nclass NPC extends Obj {\r\n    public bStatic: boolean = false;\r\n\tpublic bStartFollowing: boolean = false;\r\n    public bFollowing: boolean = false;\r\n    private followIndex: number;\r\n    private sightType: number;\r\n    private turnCounter: number;\r\n    public gPos: Vector2;\r\n    public seen: boolean;\r\n\tpublic framePosition: Vector2;\r\n\tprivate static turnMin: number = 40;\r\n\tprivate static turnMax: number = 200;\r\n\tprivate static visionMax: number = 4;\r\n\r\n\t// To help keep memory down\r\n\tprivate temp: any;\r\n\tprivate tempVec: Vector2;\r\n    private superTemp: number = 0;\r\n    private tempCount: number = 0;\r\n\r\n    // Function to see if the player has crossed the npc's vision and to change the anim\r\n    private look(target: Vector2, collision: any) {\r\n        this.temp = this.gPos; // Because you can't decrease this.gPos\r\n        this.tempVec = target.minus(this.gPos);\r\n\t\tif (this.tempVec.abs().x > 4 && this.tempVec.abs().y > 4)\r\n            return;\r\n        else if (this.tempVec.abs().x < 4 && (this.animMan.frame == Direction.DL || this.animMan.frame == Direction.UR))\r\n            switch (this.animMan.frame) {\r\n                case Direction.DL:\r\n\t\t\t\t\t// Make sure the npc can actually see the player, no walls in the way and not out of range ( 4 )\r\n\t\t\t\t\tif (target.x > this.temp.x && target.y == this.temp.y) {\r\n\t\t\t\t\t\tthis.superTemp = 0;\r\n\t\t\t\t\t\tfor (this.temp.x; target.x > this.temp.x; this.temp.x++ , this.superTemp++) {\r\n\t\t\t\t\t\t\tif (collision[this.temp.y][this.temp.x].animMan.anims[collision[this.temp.y][this.temp.x].animMan.currentAnim].name === \"filled\")\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// If the npc can actually see the player, change the anim to the seen anim and set the flag\r\n\t\t\t\t\t\tthis.seen = true;\r\n\t\t\t\t\t\tthis.animMan.gotoNamedAnim(\"npcIdleDSeen\");\r\n\t\t\t\t\t}\r\n                    break;\r\n                case Direction.UR:\r\n\t\t\t\t\tif (target.x < this.temp.x && target.y == this.temp.y) {\r\n\t\t\t\t\t\tthis.superTemp = 0;\r\n\t\t\t\t\t\tfor (this.temp.x; target.x < this.temp.x; this.temp.x-- , this.superTemp++) {\r\n\t\t\t\t\t\t\tif (collision[this.temp.y][this.temp.x].animMan.anims[collision[this.temp.y][this.temp.x].animMan.currentAnim].name === \"filled\")\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.seen = true;\r\n\t\t\t\t\t\tthis.animMan.gotoNamedAnim(\"npcIdleUSeen\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n            }\r\n        else if (this.tempVec.abs().y < 4 && (this.animMan.frame == Direction.UL || this.animMan.frame == Direction.DR))\r\n            switch (this.animMan.frame) {\r\n                case Direction.UL:\r\n\t\t\t\t\tif (target.x == this.temp.x && target.y > this.temp.y) {\r\n\t\t\t\t\t\tfor (this.temp.y; target.y > this.temp.y; this.temp.y++, this.superTemp++) {\r\n\t\t\t\t\t\t\tif (collision[this.temp.y][this.temp.x].animMan.anims[collision[this.temp.y][this.temp.x].animMan.currentAnim].name === \"filled\")\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.seen = true;\r\n\t\t\t\t\t\tthis.animMan.gotoNamedAnim(\"npcIdleLSeen\");\r\n\t\t\t\t\t}\r\n                    break;\r\n                case Direction.DR:\r\n\t\t\t\t\tif (target.x == this.temp.x && target.y < this.temp.y) {\r\n\t\t\t\t\t\tthis.superTemp = 0;\r\n\t\t\t\t\t\tfor (this.temp.y; target.y < this.temp.y; this.temp.y--, this.superTemp++) {\r\n\t\t\t\t\t\t\tif (collision[this.temp.y][this.temp.x].animMan.anims[collision[this.temp.y][this.temp.x].animMan.currentAnim].name === \"filled\")\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.seen = true;\r\n\t\t\t\t\t\tthis.animMan.gotoNamedAnim(\"npcIdleRSeen\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tif (this.animMan.frame < 0)\r\n\t\t\tthis.animMan.frame = 0;\r\n    }\r\n\r\n    // Set the index in the players last positions array that the npc is supposed to look at\r\n    public setfollowIndex(i: number) {\r\n            this.followIndex = i;\r\n    }\r\n\r\n    // Lerp to the position behind the player the npc is supposed to be at\r\n    public followPlayer(p: Player) {\r\n        this.pos = lerp(this.pos, gridToScreen(p.previousLoc[this.followIndex]), p.speed);\r\n        this.gPos = new Vector2(p.previousLoc[this.followIndex].x, p.previousLoc[this.followIndex].y);\r\n    }\r\n\r\n    // Pseudo-randomly rotate the npc's in either a clockwise, anti-clockwise, or random direction\r\n    private rotate(score: number) {\r\n        if (this.turnCounter == 0) {\r\n            if (this.sightType == 0) {\r\n                this.animMan.rightFrame();\r\n            } else if (this.sightType == 1) {\r\n                this.animMan.leftFrame();\r\n            } else if (this.sightType == 2) {\r\n                if (Math.round(Math.random()))\r\n\t\t\t\t\tthis.animMan.rightFrame();\r\n\t\t\t\telse this.animMan.leftFrame();\r\n\t\t\t}\r\n            else if (this.animMan.frame > this.animMan.anims.length)\r\n                this.animMan.gotoFrame(0);\r\n            this.turnCounter = randIntBetween(NPC.turnMin, clamp(NPC.turnMin, NPC.turnMax, NPC.turnMax - score));\r\n        } else\r\n\t\t\tthis.turnCounter--;\r\n    }\r\n\r\n    public tick(inp: Input, p: Player, collision: any) {\r\n        // If the player walks over the npc, add the npc to the player and increase the players speed\r\n        if (p.pos.equals(this.pos) && !this.bFollowing) {\r\n            this.setfollowIndex(p.following.length);\r\n            p.following.push(this);\r\n            this.bFollowing = true;\r\n            p.speed += p.speedBoost;\r\n        }\r\n        // If the npc is supposed to be following the player, change the anim to the following anim\r\n        else if (this.bFollowing) {\r\n            this.followPlayer(p);\r\n\t\t\tif (!this.bStartFollowing) {\r\n\t\t\t\tthis.animMan.gotoNamedAnim(\"npcFollowAnim\");\r\n\t\t\t\tthis.bStartFollowing = true;\r\n\t\t\t}\r\n        }\r\n        else if (!this.seen) {\r\n            // rand decide turn\r\n            this.rotate(p.following.length);\r\n            \r\n            // check if can see player or any part of tail\r\n            this.look(p.gDestination, collision);\r\n            for (this.tempCount = 0; this.tempCount < p.following.length; this.tempCount++)\r\n                this.look(p.following[this.tempCount].gPos, collision);\r\n        }\r\n    }\r\n\r\n    constructor(sVect: Vector2, gVect: Vector2, z: number, anims: Array<SSAnimation>) {\r\n        super(sVect.x, sVect.y, anims, z);\r\n        this.gPos = gVect;\r\n        this.pos = sVect;\r\n        this.followIndex = -5;\r\n        this.seen = false;\r\n        this.turnCounter = randIntBetween(NPC.turnMin, NPC.turnMax);\r\n        this.animMan = new AnimationManager(anims);\r\n        this.animMan.gotoFrame(randIntBetween(0, 3));\r\n\r\n        // Pick a random turn type\r\n        this.sightType = randIntBetween(0, 2); // 0 = cw, 1 = ccw, 2 = rand\r\n    }\r\n}"],"sourceRoot":"SS/SS/js"}