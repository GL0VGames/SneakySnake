{"version":3,"sources":["Player.ts"],"names":[],"mappings":"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","file":"Player.js","sourcesContent":["/// <reference path=\"ArgyleEngine.ts\"/>\r\nclass Player extends Obj {\r\n    public gDestination: Vector2;\r\n    public sDestination: Vector2;\r\n    public speed: number = 2.3;\r\n    public bCanLerp: boolean;\r\n    public previousLoc: Array<Vector2>;\r\n    public following: Array<NPC>;\r\n    public health: number = 1;\r\n    public speedBoost: number = .1; // Added to player speed whenever they pick up an NPC\r\n    private lastKey: string;\r\n\r\n    constructor(x: number, y: number, anims: Array<SSAnimation>) {\r\n        super(x, y, anims, 5);\r\n        this.bStatic = false;\r\n        this.gDestination = new Vector2(1, 1);\r\n        this.sDestination = new Vector2(x, y);\r\n        this.previousLoc = [new Vector2(1, 1)];\r\n        this.bCanLerp = true;\r\n        this.following = [];\r\n        this.animMan.gotoNamedAnim(\"playerIdleR\");\r\n    }\r\n\r\n    private IDLE() {\r\n        if (this.animMan.anims[this.animMan.currentAnim].name == \"playerWalkD\")\r\n            this.animMan.gotoNamedAnim(\"playerIdleD\");\r\n        else if (this.animMan.anims[this.animMan.currentAnim].name == \"playerWalkU\")\r\n            this.animMan.gotoNamedAnim(\"playerIdleU\");\r\n        else if (this.animMan.anims[this.animMan.currentAnim].name == \"playerWalkR\")\r\n            this.animMan.gotoNamedAnim(\"playerIdleR\");\r\n    }\r\n\r\n    public tick(input: Input, collisionmap: any): void {\r\n        // If there is somewhere to go and you're not there\r\n        if (this.bCanLerp && input.keyPresses.length > 0 && this.sDestination.equals(this.pos) && this.health > 0) {\r\n            // Add current position to previous loc arr so that followers know where to go\r\n            this.previousLoc = [new Vector2(this.gDestination.x, this.gDestination.y)].concat(this.previousLoc.slice());\r\n            // Change destination and anim to match new movement\r\n            if (input.keyPresses[0] === \"s\") {\r\n                this.gDestination.y = this.gDestination.y + 1;\r\n                this.lastKey = \"s\";\r\n            }\r\n            else if (input.keyPresses[0] === \"a\") {\r\n                this.gDestination.x = this.gDestination.x - 1;\r\n                this.lastKey = \"a\";\r\n            }\r\n            else if (input.keyPresses[0] === \"w\") {\r\n                this.gDestination.y = this.gDestination.y - 1;\r\n                this.lastKey = \"w\";\r\n            }\r\n            else if (input.keyPresses[0] === \"d\") {\r\n                this.gDestination.x = this.gDestination.x + 1;\r\n                this.lastKey = \"d\";\r\n            }\r\n            // Remove keypress\r\n            input.keyPresses = input.keyPresses.splice(1, input.keyPresses.length - 1);\r\n            // Set screen destination and go there\r\n            this.sDestination = gridToScreen(this.gDestination);\r\n        } else if (this.bCanLerp && !this.sDestination.equals(this.pos)) {\r\n            // Change anims because now it's ok to move\r\n            if (this.lastKey === \"s\")\r\n                this.animMan.gotoNamedAnim(\"playerWalkD\");\r\n            else if (this.lastKey === \"a\")\r\n                this.animMan.gotoNamedAnim(\"playerWalkU\");\r\n            else if (this.lastKey === \"w\")\r\n                this.animMan.gotoNamedAnim(\"playerWalkU\");\r\n            else if (this.lastKey === \"d\")\r\n                this.animMan.gotoNamedAnim(\"playerWalkR\");\r\n\r\n            // Move\r\n            this.pos = lerp(this.pos, this.sDestination, this.speed);\r\n        } else if (!this.bCanLerp) {\r\n            // Reset bCanLerp and location vars so that you can move again\r\n            this.bCanLerp = true;\r\n            this.gDestination = new Vector2(this.previousLoc[0].x, this.previousLoc[0].y);\r\n            this.sDestination = gridToScreen(this.gDestination);\r\n            this.previousLoc = this.previousLoc.splice(1, this.previousLoc.length - 1);\r\n            // For any case that doesn't involve moving, go to idle anim\r\n            this.IDLE();\r\n        } else\r\n            this.IDLE();\r\n    }\r\n} "],"sourceRoot":"SS/SS/js"}